[{"path":"https://byronsyun.github.io/vizOmics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Jiadong Mao Yinuo Sun Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://byronsyun.github.io/vizOmics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jiadong Mao. Author, maintainer. Yinuo Sun. Author.","code":""},{"path":"https://byronsyun.github.io/vizOmics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mao J, Sun Y (2025). vizOmics: Visualization Tools Multi-Omics Data Analysis. R package version 0.1.0, https://github.com/ByronSyun/vizOmics.","code":"@Manual{,   title = {vizOmics: Visualization Tools for Multi-Omics Data Analysis},   author = {Jiadong Mao and Yinuo Sun},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/ByronSyun/vizOmics}, }"},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"vizomics","dir":"","previous_headings":"","what":"vizOmics - Visualization Tools for Multi-Omics Data","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"vizOmics R package providing visualization utility functions multi-omics data analysis. includes tools clustering alignment, score matrix visualization, Sankey diagrams comparing classification results.","code":""},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"alignClusters(): Align clustering results using optimal assignment (Hungarian algorithm) matrixPlot(): Create comprehensive visualizations score matrices intelligent color detection multiple palettes plotSankey(): Generate interactive Sankey diagrams 2 3 classification comparisons","code":""},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"id_-whats-new-in-vizomics","dir":"","previous_headings":"Features","what":"üÜï What‚Äôs New in vizOmics","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"Enhanced matrixPlot() Smart Coloring: - ‚úÖ Intelligent color type detection: Automatically distinguishes discrete (factors, clusters) continuous (expression) variables - ‚úÖ Ordinal label parsing: Recognizes patterns like ‚Äú1 2‚Äù converts 1.5 proper ordering - ‚úÖ Reproducible colors: Fixed color mapping ensures consistency across runs - ‚úÖ Gradient direction control: reverse_gradient parameter mapping high values warm colors - ‚úÖ Multiple palettes: 5 continuous (MATLAB, viridis, plasma, inferno, magma) 5 discrete (Set1, Set2, Set3, Dark2, Paired) options - ‚úÖ Full control: Manual override color types custom color specifications","code":""},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"can install development version vizOmics GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"ByronSyun/vizOmics\")"},{"path":[]},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"example-covid-19-multi-omics-analysis","dir":"","previous_headings":"Quick Start","what":"Example: COVID-19 Multi-Omics Analysis","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"","code":"library(vizOmics)  # Load DIVAS results and metadata divasRes <- readRDS(\"divas_results.rds\") metadata <- readRDS(\"metadata.rds\")  # Extract score matrix scores <- divasRes$sampleScoreMatrix colnames(scores) <- paste0(\"comp\", 1:ncol(scores))  # WHO Ordinal Scale (disease severity: 1=mild, 7=severe) wos <- metadata$`Who Ordinal Scale`  # 1. Basic matrix plot matrixPlot(scores, max_ncomp = 3)  # 2. Color by disease severity #    matrixPlot auto-detects discrete categories and sorts them #    Use reverse_gradient=TRUE to map high severity (7) ‚Üí red matrixPlot(scores, max_ncomp = 3, colBy = factor(wos),             legendTitle = \"WHO Ordinal Scale\",             reverse_gradient = TRUE)  # 3. Find top components correlated with severity #    Manual conversion needed for correlation analysis wos_numeric <- as.numeric(gsub(\" or \", \".\", wos))  # \"1 or 2\" ‚Üí 1.5 correlations <- cor(scores, wos_numeric, method = \"spearman\") top_comps <- order(abs(correlations), decreasing = TRUE)[1:5]  # Visualize top components matrixPlot(scores, comp_idx = top_comps, colBy = factor(wos),            reverse_gradient = TRUE, pointSize = 2)  # 4. Sankey diagram: Timepoint ‚Üí Severity ‚Üí Cluster timepoint <- metadata$timepoint severity <- cut(wos_numeric, breaks = c(0, 2, 4, 8),                  labels = c(\"Mild\", \"Moderate\", \"Severe\")) clusters <- kmeans(scores[, 1:3], centers = 3)$cluster  plotSankey(timepoint, severity, factor(clusters),             class_names = c(\"Timepoint\", \"Severity\", \"Cluster\"))  # 5. Align clustering results ref_clusters <- metadata$reference_clusters aligned <- alignClusters(clusters, ref_clusters) table(aligned, ref_clusters)  # Check alignment"},{"path":[]},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"alignclusters","dir":"","previous_headings":"Functions Overview","what":"alignClusters()","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"Aligns query clustering results reference clustering using Hungarian algorithm. Useful : - Comparing clustering results different methods - Matching cluster labels across different parameter settings - Evaluating clustering stability","code":""},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"matrixplot","dir":"","previous_headings":"Functions Overview","what":"matrixPlot()","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"Creates comprehensive visualizations score matrices: - 1 component: Density plot jittered points - 2 components: Scatter plot - 3+ components: Matrix density plots (diagonal) scatter plots (-diagonal) Enhanced Features (v0.1.0): - Intelligent color type detection: Automatically detects discrete (factors, integer clusters) vs continuous (numeric expression) variables - Ordinal label parsing: Recognizes ‚Äú1 2‚Äù patterns converts numeric (1.5) proper ordering - Reproducible colors: Fixed color mapping sorted factor levels ensures consistency - Gradient direction control: reverse_gradient = TRUE map high values ‚Üí red, low values ‚Üí blue - Multiple color palettes: - Continuous: matlab (default), viridis, plasma, inferno, magma - Discrete: Set1, Set2, Set3, Dark2, Paired - Manual control: Override auto-detection colBy_type parameter - Customizable: Point sizes, transparency, custom colors, legend titles","code":""},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"plotsankey","dir":"","previous_headings":"Functions Overview","what":"plotSankey()","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"Generates interactive Sankey diagrams: - 2 classifications: Direct flow visualization - 3 classifications: Sequential flow three levels - Interactive HTML widget (powered networkD3) - Customizable font sizes node labels","code":""},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"vizOmics requires following R packages: - ggplot2 - cowplot - gridExtra - networkD3 - dplyr - tidyr - clue - magrittr - rlang - viridisLite (color palettes) - grDevices (color generation) - utils","code":""},{"path":"https://byronsyun.github.io/vizOmics/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"vizOmics - Visualization Tools for Multi-Omics Data","text":"MIT License. Copyright (c) 2025 Jiadong Mao Yinuo Sun. See LICENSE.md full details.","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/alignClusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Align Clustering Results ‚Äî alignClusters","title":"Align Clustering Results ‚Äî alignClusters","text":"Given reference clustering result, align query clustering result match reference labels using optimal assignment (Hungarian algorithm).","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/alignClusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align Clustering Results ‚Äî alignClusters","text":"","code":"alignClusters(clust, clust_ref)"},{"path":"https://byronsyun.github.io/vizOmics/reference/alignClusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align Clustering Results ‚Äî alignClusters","text":"clust Query clustering result, can numerical, character factor vector. clust_ref Reference clustering result align .","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/alignClusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align Clustering Results ‚Äî alignClusters","text":"Re-aligned clustering result, represented factor vector levels matching reference clustering.","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/alignClusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Align Clustering Results ‚Äî alignClusters","text":"function uses Hungarian algorithm (via clue::solve_LSAP) find optimal alignment query reference cluster labels. useful comparing clustering results different methods parameters, cluster labels may arbitrary.","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/alignClusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align Clustering Results ‚Äî alignClusters","text":"","code":"if (FALSE) { # \\dontrun{ # Create example clustering results clust_ref <- factor(c(rep(\"A\", 50), rep(\"B\", 50), rep(\"C\", 50))) clust_query <- factor(c(rep(\"1\", 50), rep(\"2\", 50), rep(\"3\", 50)))  # Align query to reference clust_aligned <- alignClusters(clust_query, clust_ref)  # Check alignment table(clust_aligned, clust_ref) } # }"},{"path":"https://byronsyun.github.io/vizOmics/reference/matrixPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Score matrix plot ‚Äî matrixPlot","title":"Score matrix plot ‚Äî matrixPlot","text":"Density pairwise scatter plots visualising score matrices.","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/matrixPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score matrix plot ‚Äî matrixPlot","text":"","code":"matrixPlot(   scores,   max_ncomp = NULL,   comp_idx = NULL,   var_names = NULL,   colBy = NULL,   pointAlpha = NULL,   pointSize = 1,   manualCol = NULL,   manualAlpha = NULL,   fsize = 14,   returnPlotList = FALSE,   legendTitle = \"\",   compName = \"comp\",   legendPosition = c(\"right\", \"left\", \"bottom\", \"top\", \"inside\", \"none\") )"},{"path":"https://byronsyun.github.io/vizOmics/reference/matrixPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score matrix plot ‚Äî matrixPlot","text":"scores Matrix scores plotted max_ncomp Default NULL. Number first components plot. specified, override comp_idx var_names. comp_idx Default NULL. Indices components plot. override var_names specified. var_names Default NULL. Character vector variable names (column names) plot. overridden max_ncomp comp_idx specified. colBy Numeric character vectors specify colour points. pointAlpha Alpha value. pointSize Point size. manualCol Manual specification colours. manualAlpha Manual specification alpha colours. fsize Figure font size. returnPlotList Logical. Whether return individual plots. legendTitle Legend title. compName Name components, default \"comp\", 1st column named comp1 etc. legendPosition Location legend plotting two scores.","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/plotCircos.html","id":null,"dir":"Reference","previous_headings":"","what":"Create circos plot for multimodal correlations ‚Äî plotCircos","title":"Create circos plot for multimodal correlations ‚Äî plotCircos","text":"Create circos plot multimodal correlations","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/plotCircos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create circos plot for multimodal correlations ‚Äî plotCircos","text":"","code":"plotCircos(   feature_list,   data_list,   pos_threshold = 0.3,   neg_threshold = 0.3,   cor_method = \"pearson\",   link_transparency = 0.5,   gap_size = 2,   feature_label_cex = 0.6,   legend_cex = 0.8,   link_lwd = 1,   label_wrap_length = 15,   brewerPalette = \"Set2\" )"},{"path":"https://byronsyun.github.io/vizOmics/reference/plotCircos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create circos plot for multimodal correlations ‚Äî plotCircos","text":"feature_list Named list vectors, containing feature names one modality data_list Named list data matrices modalities feature_list, rows = features, columns = samples; must length feature_list pos_threshold Numeric threshold positive correlations (default 0.3) neg_threshold Numeric threshold negative correlations (default 0.3) cor_method Correlation method: \"pearson\", \"spearman\", \"kendall\" (default \"pearson\") link_transparency Transparency links (default 0.5) gap_size Gap sectors degrees (default 2) feature_label_cex Font size feature labels (default 0.6) legend_cex Font size legend (default 0.8) link_lwd Line width correlation links (default 1) label_wrap_length Maximum character length wrapping labels (default 15) brewerPalette Name RColorBrewer palette, representing different modalities","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/plotCircos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create circos plot for multimodal correlations ‚Äî plotCircos","text":"list containing: correlations Data frame filtered correlations plot_recorded Recorded plot object can replayed replayPlot()","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/plotSankey.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Sankey Diagram for Classification Results ‚Äî plotSankey","title":"Plot Sankey Diagram for Classification Results ‚Äî plotSankey","text":"Create interactive Sankey diagram visualize flow 2 3 classification results. Useful comparing clustering classification outcomes across different methods timepoints.","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/plotSankey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Sankey Diagram for Classification Results ‚Äî plotSankey","text":"","code":"plotSankey(..., add_suffix = TRUE, fontsize = 12, class_names = NULL)"},{"path":"https://byronsyun.github.io/vizOmics/reference/plotSankey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Sankey Diagram for Classification Results ‚Äî plotSankey","text":"... Two three classification vectors. vector class labels (character, factor, numeric). add_suffix Logical. TRUE (default), adds suffixes distinguish classification levels plotting 3 classifications. used 3 classifications provided. fontsize Numeric. Font size node labels. Default 12. class_names Character vector. Optional names classification levels. NULL, uses \"Class1\", \"Class2\", etc.","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/plotSankey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Sankey Diagram for Classification Results ‚Äî plotSankey","text":"interactive Sankey diagram (networkD3 htmlwidget object).","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/plotSankey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Sankey Diagram for Classification Results ‚Äî plotSankey","text":"function automatically detects whether 2 3 classification vectors provided creates appropriate Sankey diagram: 2 classifications: Shows direct flow first second 3 classifications: Shows flow first -> second -> third add_suffix = TRUE 3 classifications, suffixes (\"-\", \"_\", \"\") added class labels ensure uniqueness across levels.","code":""},{"path":"https://byronsyun.github.io/vizOmics/reference/plotSankey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Sankey Diagram for Classification Results ‚Äî plotSankey","text":"","code":"if (FALSE) { # \\dontrun{ # Two classifications class1 <- sample(c(\"A\", \"B\", \"C\"), 100, replace = TRUE) class2 <- sample(c(\"X\", \"Y\", \"Z\"), 100, replace = TRUE) plotSankey(class1, class2)  # Three classifications class3 <- sample(c(\"P\", \"Q\", \"R\"), 100, replace = TRUE) plotSankey(class1, class2, class3, fontsize = 14)  # With custom names plotSankey(class1, class2, class3,             class_names = c(\"Method1\", \"Method2\", \"Method3\")) } # }"},{"path":"https://byronsyun.github.io/vizOmics/reference/vizOmics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vizOmics: Visualization Tools for Multi-Omics Data Analysis ‚Äî vizOmics-package","title":"vizOmics: Visualization Tools for Multi-Omics Data Analysis ‚Äî vizOmics-package","text":"collection visualization utility functions multi-omics data analysis. Includes tools clustering alignment, score matrix visualization intelligent color detection, interactive Sankey diagrams comparing classification results. Functions extracted enhanced PhiSpace package.","code":""},{"path":[]},{"path":"https://byronsyun.github.io/vizOmics/reference/vizOmics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vizOmics: Visualization Tools for Multi-Omics Data Analysis ‚Äî vizOmics-package","text":"Maintainer: Jiadong Mao chiatungmao@gmail.com (ORCID) Authors: Yinuo Sun byronsunyinuoo@gmail.com","code":""}]
